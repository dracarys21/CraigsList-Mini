@model Data.Models.PostViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Areas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedArea,
                    Model.Areas,
                    new
                    {
                        @class = "form-control",
                        @id = "ddlareas",
                        @onchange = "javascript:GetLocales(this.value);"
                    })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locales, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="SelectedLocale" name="SelectedLocale" class="form-control"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCategory,
                    Model.Categories,
                    new { @class = "form-control",
                        @id = "ddlcategories", 
                        @onchange = "javascript:GetSubCategories(this.value);"
                    })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="SelectedSubcategory" name="SelectedSubcategory" class="form-control">
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script language="javascript" type="text/javascript">
        function GetSubCategories(_category) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#SelectedSubcategory").html(procemessage).show();
            var url = "@Url.Action("GetSubCategoriesByCategory", "PostFilter")";

            $.ajax({
                url: url,
                data: { category: _category },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Subcategory</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#SelectedSubcategory").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

        function GetLocales(_area) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#SelectedLocale").html(procemessage).show();
            var url = "@Url.Action("GetLocalesByArea", "PostFilter")";

            $.ajax({
                url: url,
                data: { area: _area },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Locale</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#SelectedLocale").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    </script>
}
